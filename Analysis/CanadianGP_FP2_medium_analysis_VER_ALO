{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vmiXTZfymiFj",
        "outputId": "42563df1-b3f5-4e0c-b5a3-759fa3a9531d"
      },
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting fastf1\n",
            "  Downloading fastf1-3.0.4-py3-none-any.whl (113 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m113.5/113.5 kB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting requests-cache>=0.8.0 (from fastf1)\n",
            "  Downloading requests_cache-1.0.1-py3-none-any.whl (58 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.7/58.7 kB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: pandas<3.0.0,>=1.2.4 in /usr/local/lib/python3.10/dist-packages (from fastf1) (1.5.3)\n",
            "Requirement already satisfied: numpy<2.0.0,>=1.20.3 in /usr/local/lib/python3.10/dist-packages (from fastf1) (1.22.4)\n",
            "Requirement already satisfied: scipy<2.0.0,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from fastf1) (1.10.1)\n",
            "Collecting thefuzz (from fastf1)\n",
            "  Downloading thefuzz-0.19.0-py2.py3-none-any.whl (17 kB)\n",
            "Requirement already satisfied: matplotlib<4.0.0,>=3.4.2 in /usr/local/lib/python3.10/dist-packages (from fastf1) (3.7.1)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from fastf1) (2.8.2)\n",
            "Collecting timple>=0.1.6 (from fastf1)\n",
            "  Downloading timple-0.1.6-py3-none-any.whl (17 kB)\n",
            "Collecting requests>=2.28.0 (from fastf1)\n",
            "  Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.6/62.6 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting websockets>=8.1 (from fastf1)\n",
            "  Downloading websockets-11.0.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (129 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m129.9/129.9 kB\u001b[0m \u001b[31m10.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (1.0.7)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (4.39.3)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (1.4.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (23.1)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (8.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4.0.0,>=3.4.2->fastf1) (3.0.9)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0.0,>=1.2.4->fastf1) (2022.7.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil->fastf1) (1.16.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.28.0->fastf1) (2.0.12)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.28.0->fastf1) (3.4)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.28.0->fastf1) (1.26.15)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.28.0->fastf1) (2022.12.7)\n",
            "Requirement already satisfied: attrs>=21.2 in /usr/local/lib/python3.10/dist-packages (from requests-cache>=0.8.0->fastf1) (23.1.0)\n",
            "Collecting cattrs>=22.2 (from requests-cache>=0.8.0->fastf1)\n",
            "  Downloading cattrs-23.1.2-py3-none-any.whl (50 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.8/50.8 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-cache>=0.8.0->fastf1) (3.3.0)\n",
            "Collecting url-normalize>=1.4 (from requests-cache>=0.8.0->fastf1)\n",
            "  Downloading url_normalize-1.4.3-py2.py3-none-any.whl (6.8 kB)\n",
            "Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from cattrs>=22.2->requests-cache>=0.8.0->fastf1) (1.1.1)\n",
            "Requirement already satisfied: typing_extensions>=4.1.0 in /usr/local/lib/python3.10/dist-packages (from cattrs>=22.2->requests-cache>=0.8.0->fastf1) (4.5.0)\n",
            "Installing collected packages: thefuzz, websockets, url-normalize, requests, cattrs, requests-cache, timple, fastf1\n",
            "  Attempting uninstall: requests\n",
            "    Found existing installation: requests 2.27.1\n",
            "    Uninstalling requests-2.27.1:\n",
            "      Successfully uninstalled requests-2.27.1\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests==2.27.1, but you have requests 2.31.0 which is incompatible.\u001b[0m\u001b[31m\n",
            "\u001b[0mSuccessfully installed cattrs-23.1.2 fastf1-3.0.4 requests-2.31.0 requests-cache-1.0.1 thefuzz-0.19.0 timple-0.1.6 url-normalize-1.4.3 websockets-11.0.3\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: timple in /usr/local/lib/python3.10/dist-packages (0.1.6)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from timple) (1.22.4)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from timple) (3.7.1)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (1.0.7)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (4.39.3)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (1.4.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (23.1)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (8.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (3.0.9)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->timple) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->timple) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "%matplotlib inline\n",
        "!pip install fastf1\n",
        "!pip install timple\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import fastf1\n",
        "import pandas as pd\n",
        "\n",
        "# Get the telemetry data for the testing session\n",
        "fastf1.Cache.enable_cache('/content/sample_data')  # replace with your cache directory\n",
        "#session = fastf1.get_testing_session(2023, 1, 3)\n",
        "session = fastf1.get_session(2023,\"Canada\",'FP2')\n"
      ],
      "metadata": {
        "id": "k2j16nkPmrdY"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "session.load()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SfhocEYcoWwt",
        "outputId": "0fe01c14-e7fc-410b-b07c-5a686fd7a396"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "core           INFO \tLoading data for Canadian Grand Prix - Practice 2 [v3.0.4]\n",
            "INFO:fastf1.fastf1.core:Loading data for Canadian Grand Prix - Practice 2 [v3.0.4]\n",
            "req            INFO \tNo cached data found for driver_info. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for driver_info. Loading data...\n",
            "_api           INFO \tFetching driver list...\n",
            "INFO:fastf1.api:Fetching driver list...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "core        WARNING \tNo result data for this session available on Ergast! (This is expected for recent sessions)\n",
            "WARNING:fastf1.fastf1.core:No result data for this session available on Ergast! (This is expected for recent sessions)\n",
            "req            INFO \tNo cached data found for session_status_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for session_status_data. Loading data...\n",
            "_api           INFO \tFetching session status data...\n",
            "INFO:fastf1.api:Fetching session status data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "req            INFO \tNo cached data found for track_status_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for track_status_data. Loading data...\n",
            "_api           INFO \tFetching track status data...\n",
            "INFO:fastf1.api:Fetching track status data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "req            INFO \tNo cached data found for timing_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for timing_data. Loading data...\n",
            "_api           INFO \tFetching timing data...\n",
            "INFO:fastf1.api:Fetching timing data...\n",
            "_api           INFO \tParsing timing data...\n",
            "INFO:fastf1.api:Parsing timing data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "req            INFO \tNo cached data found for timing_app_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for timing_app_data. Loading data...\n",
            "_api           INFO \tFetching timing app data...\n",
            "INFO:fastf1.api:Fetching timing app data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "core           INFO \tProcessing timing data...\n",
            "INFO:fastf1.fastf1.core:Processing timing data...\n",
            "req            INFO \tNo cached data found for car_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for car_data. Loading data...\n",
            "_api           INFO \tFetching car data...\n",
            "INFO:fastf1.api:Fetching car data...\n",
            "_api           INFO \tParsing car data...\n",
            "INFO:fastf1.api:Parsing car data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "req            INFO \tNo cached data found for position_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for position_data. Loading data...\n",
            "_api           INFO \tFetching position data...\n",
            "INFO:fastf1.api:Fetching position data...\n",
            "_api           INFO \tParsing position data...\n",
            "INFO:fastf1.api:Parsing position data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "req            INFO \tNo cached data found for weather_data. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for weather_data. Loading data...\n",
            "_api           INFO \tFetching weather data...\n",
            "INFO:fastf1.api:Fetching weather data...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "req            INFO \tNo cached data found for race_control_messages. Loading data...\n",
            "INFO:fastf1.fastf1.req:No cached data found for race_control_messages. Loading data...\n",
            "_api           INFO \tFetching race control messages...\n",
            "INFO:fastf1.api:Fetching race control messages...\n",
            "req            INFO \tData has been written to cache!\n",
            "INFO:fastf1.fastf1.req:Data has been written to cache!\n",
            "core           INFO \tFinished loading data for 20 drivers: ['1', '2', '4', '10', '11', '14', '16', '18', '20', '21', '22', '23', '24', '27', '31', '44', '55', '63', '77', '81']\n",
            "INFO:fastf1.fastf1.core:Finished loading data for 20 drivers: ['1', '2', '4', '10', '11', '14', '16', '18', '20', '21', '22', '23', '24', '27', '31', '44', '55', '63', '77', '81']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "drivers = pd.unique(session.laps['Driver'])\n",
        "print(drivers)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qdaG4p_foH5W",
        "outputId": "e60c1282-ff61-4819-e522-cffe4a886c10"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['VER' 'GAS' 'PER' 'ALO' 'LEC' 'STR' 'SAR' 'MAG' 'DEV' 'TSU' 'ALB' 'ZHO'\n",
            " 'HUL' 'OCO' 'NOR' 'HAM' 'SAI' 'RUS' 'BOT' 'PIA']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Choose the driver you want to analyze\n",
        "driver_name = 'ALO'\n",
        "\n",
        "alo = session.laps.pick_driver('ALO')\n",
        "\n",
        "# Assuming the DataFrame with lap times is called \"df\"\n",
        "# Filter out rows with NaT values and create a new DataFrame\n",
        "df_clean = alo.dropna(subset=['LapTime'])\n",
        "\n",
        "# Print the new DataFrame\n",
        "df_clean.columns.values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d8Tusu8cpb42",
        "outputId": "da61e8b6-0507-4616-cf32-6968628f8187"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Time', 'Driver', 'DriverNumber', 'LapTime', 'LapNumber', 'Stint',\n",
              "       'PitOutTime', 'PitInTime', 'Sector1Time', 'Sector2Time',\n",
              "       'Sector3Time', 'Sector1SessionTime', 'Sector2SessionTime',\n",
              "       'Sector3SessionTime', 'SpeedI1', 'SpeedI2', 'SpeedFL', 'SpeedST',\n",
              "       'IsPersonalBest', 'Compound', 'TyreLife', 'FreshTyre', 'Team',\n",
              "       'LapStartTime', 'LapStartDate', 'TrackStatus', 'Position',\n",
              "       'Deleted', 'DeletedReason', 'FastF1Generated', 'IsAccurate'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Assuming the DataFrame with cleaned lap times is called \"df_clean\"\n",
        "# Save the DataFrame to a CSV file\n",
        "df_clean.to_csv('lap_times_alo.csv', index=False)\n",
        "\n",
        "# The \"index=False\" parameter tells pandas not to include row numbers in the CSV file\n"
      ],
      "metadata": {
        "id": "oqPc-NOsthA6"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_ALO_medium = df_clean[df_clean[\"Compound\"]==\"MEDIUM\"]\n",
        "df_ALO_medium"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 526
        },
        "id": "mUH62VsD0jqX",
        "outputId": "ce81906d-eee9-405d-9bcd-ba19e7d5ca99"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      Time Driver DriverNumber                LapTime  \\\n",
              "130 0 days 01:29:30.752000    ALO           14 0 days 00:01:39.421000   \n",
              "131 0 days 01:30:47.916000    ALO           14 0 days 00:01:17.164000   \n",
              "132 0 days 01:32:05.884000    ALO           14 0 days 00:01:17.968000   \n",
              "133 0 days 01:33:25.107000    ALO           14 0 days 00:01:19.223000   \n",
              "134 0 days 01:34:42.610000    ALO           14 0 days 00:01:17.503000   \n",
              "135 0 days 01:36:00.306000    ALO           14 0 days 00:01:17.696000   \n",
              "136 0 days 01:37:17.428000    ALO           14 0 days 00:01:17.122000   \n",
              "137 0 days 01:38:37.888000    ALO           14 0 days 00:01:20.460000   \n",
              "\n",
              "     LapNumber  Stint             PitOutTime PitInTime            Sector1Time  \\\n",
              "130       29.0    5.0 0 days 01:27:53.470000       NaT 0 days 00:00:43.268000   \n",
              "131       30.0    5.0                    NaT       NaT 0 days 00:00:21.300000   \n",
              "132       31.0    5.0                    NaT       NaT 0 days 00:00:21.772000   \n",
              "133       32.0    5.0                    NaT       NaT 0 days 00:00:21.596000   \n",
              "134       33.0    5.0                    NaT       NaT 0 days 00:00:21.640000   \n",
              "135       34.0    5.0                    NaT       NaT 0 days 00:00:21.481000   \n",
              "136       35.0    5.0                    NaT       NaT 0 days 00:00:21.419000   \n",
              "137       36.0    5.0                    NaT       NaT 0 days 00:00:21.464000   \n",
              "\n",
              "               Sector2Time  ... FreshTyre          Team  \\\n",
              "130 0 days 00:00:25.255000  ...      True  Aston Martin   \n",
              "131 0 days 00:00:24.664000  ...      True  Aston Martin   \n",
              "132 0 days 00:00:25.048000  ...      True  Aston Martin   \n",
              "133 0 days 00:00:24.850000  ...      True  Aston Martin   \n",
              "134 0 days 00:00:24.781000  ...      True  Aston Martin   \n",
              "135 0 days 00:00:24.865000  ...      True  Aston Martin   \n",
              "136 0 days 00:00:24.619000  ...      True  Aston Martin   \n",
              "137 0 days 00:00:24.686000  ...      True  Aston Martin   \n",
              "\n",
              "              LapStartTime            LapStartDate  TrackStatus  Position  \\\n",
              "130 0 days 01:27:51.331000 2023-06-16 21:42:51.337            2       NaN   \n",
              "131 0 days 01:29:30.752000 2023-06-16 21:44:30.758            1       NaN   \n",
              "132 0 days 01:30:47.916000 2023-06-16 21:45:47.922            1       NaN   \n",
              "133 0 days 01:32:05.884000 2023-06-16 21:47:05.890            1       NaN   \n",
              "134 0 days 01:33:25.107000 2023-06-16 21:48:25.113            1       NaN   \n",
              "135 0 days 01:34:42.610000 2023-06-16 21:49:42.616            1       NaN   \n",
              "136 0 days 01:36:00.306000 2023-06-16 21:51:00.312            1       NaN   \n",
              "137 0 days 01:37:17.428000 2023-06-16 21:52:17.434            1       NaN   \n",
              "\n",
              "     Deleted  DeletedReason FastF1Generated IsAccurate  \n",
              "130    False                          False      False  \n",
              "131    False                          False       True  \n",
              "132    False                          False       True  \n",
              "133    False                          False       True  \n",
              "134    False                          False       True  \n",
              "135    False                          False       True  \n",
              "136    False                          False       True  \n",
              "137    False                          False       True  \n",
              "\n",
              "[8 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e5c9edd4-9102-4aea-82d5-088f1d165062\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Time</th>\n",
              "      <th>Driver</th>\n",
              "      <th>DriverNumber</th>\n",
              "      <th>LapTime</th>\n",
              "      <th>LapNumber</th>\n",
              "      <th>Stint</th>\n",
              "      <th>PitOutTime</th>\n",
              "      <th>PitInTime</th>\n",
              "      <th>Sector1Time</th>\n",
              "      <th>Sector2Time</th>\n",
              "      <th>...</th>\n",
              "      <th>FreshTyre</th>\n",
              "      <th>Team</th>\n",
              "      <th>LapStartTime</th>\n",
              "      <th>LapStartDate</th>\n",
              "      <th>TrackStatus</th>\n",
              "      <th>Position</th>\n",
              "      <th>Deleted</th>\n",
              "      <th>DeletedReason</th>\n",
              "      <th>FastF1Generated</th>\n",
              "      <th>IsAccurate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>0 days 01:29:30.752000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:39.421000</td>\n",
              "      <td>29.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0 days 01:27:53.470000</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:43.268000</td>\n",
              "      <td>0 days 00:00:25.255000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:27:51.331000</td>\n",
              "      <td>2023-06-16 21:42:51.337</td>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>0 days 01:30:47.916000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:17.164000</td>\n",
              "      <td>30.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.300000</td>\n",
              "      <td>0 days 00:00:24.664000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:29:30.752000</td>\n",
              "      <td>2023-06-16 21:44:30.758</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>0 days 01:32:05.884000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:17.968000</td>\n",
              "      <td>31.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.772000</td>\n",
              "      <td>0 days 00:00:25.048000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:30:47.916000</td>\n",
              "      <td>2023-06-16 21:45:47.922</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>0 days 01:33:25.107000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:19.223000</td>\n",
              "      <td>32.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.596000</td>\n",
              "      <td>0 days 00:00:24.850000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:32:05.884000</td>\n",
              "      <td>2023-06-16 21:47:05.890</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>0 days 01:34:42.610000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:17.503000</td>\n",
              "      <td>33.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.640000</td>\n",
              "      <td>0 days 00:00:24.781000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:33:25.107000</td>\n",
              "      <td>2023-06-16 21:48:25.113</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>0 days 01:36:00.306000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:17.696000</td>\n",
              "      <td>34.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.481000</td>\n",
              "      <td>0 days 00:00:24.865000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:34:42.610000</td>\n",
              "      <td>2023-06-16 21:49:42.616</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>0 days 01:37:17.428000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:17.122000</td>\n",
              "      <td>35.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.419000</td>\n",
              "      <td>0 days 00:00:24.619000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:36:00.306000</td>\n",
              "      <td>2023-06-16 21:51:00.312</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>0 days 01:38:37.888000</td>\n",
              "      <td>ALO</td>\n",
              "      <td>14</td>\n",
              "      <td>0 days 00:01:20.460000</td>\n",
              "      <td>36.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.464000</td>\n",
              "      <td>0 days 00:00:24.686000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Aston Martin</td>\n",
              "      <td>0 days 01:37:17.428000</td>\n",
              "      <td>2023-06-16 21:52:17.434</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 31 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5c9edd4-9102-4aea-82d5-088f1d165062')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e5c9edd4-9102-4aea-82d5-088f1d165062 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e5c9edd4-9102-4aea-82d5-088f1d165062');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Choose the driver you want to analyze\n",
        "driver_name_two = 'VER'\n",
        "\n",
        "ver = session.laps.pick_driver('VER')\n",
        "\n",
        "# Assuming the DataFrame with lap times is called \"df\"\n",
        "# Filter out rows with NaT values and create a new DataFrame\n",
        "df_clean_two = ver.dropna(subset=['LapTime'])\n",
        "\n",
        "# Print the new DataFrame\n",
        "df_clean_two.columns.values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MUqiNAPKCk0q",
        "outputId": "7a721bd4-4e77-4a73-d90d-c7f4a3316fec"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Time', 'Driver', 'DriverNumber', 'LapTime', 'LapNumber', 'Stint',\n",
              "       'PitOutTime', 'PitInTime', 'Sector1Time', 'Sector2Time',\n",
              "       'Sector3Time', 'Sector1SessionTime', 'Sector2SessionTime',\n",
              "       'Sector3SessionTime', 'SpeedI1', 'SpeedI2', 'SpeedFL', 'SpeedST',\n",
              "       'IsPersonalBest', 'Compound', 'TyreLife', 'FreshTyre', 'Team',\n",
              "       'LapStartTime', 'LapStartDate', 'TrackStatus', 'Position',\n",
              "       'Deleted', 'DeletedReason', 'FastF1Generated', 'IsAccurate'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_VER_medium = df_clean_two[df_clean_two[\"Compound\"]==\"MEDIUM\"]\n",
        "df_VER_medium"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "VkprkEGaCyTN",
        "outputId": "375ae866-f9b9-4c9c-995b-d5ea1b3cc943"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     Time Driver DriverNumber                LapTime  \\\n",
              "16 0 days 01:07:00.793000    VER            1 0 days 00:01:43.090000   \n",
              "17 0 days 01:08:24.957000    VER            1 0 days 00:01:24.164000   \n",
              "18 0 days 01:09:42.889000    VER            1 0 days 00:01:17.932000   \n",
              "19 0 days 01:11:00.610000    VER            1 0 days 00:01:17.721000   \n",
              "20 0 days 01:12:22.687000    VER            1 0 days 00:01:22.077000   \n",
              "21 0 days 01:13:40.247000    VER            1 0 days 00:01:17.560000   \n",
              "22 0 days 01:14:57.790000    VER            1 0 days 00:01:17.543000   \n",
              "23 0 days 01:16:15.089000    VER            1 0 days 00:01:17.299000   \n",
              "24 0 days 01:17:32.518000    VER            1 0 days 00:01:17.429000   \n",
              "25 0 days 01:18:50.359000    VER            1 0 days 00:01:17.841000   \n",
              "26 0 days 01:20:07.709000    VER            1 0 days 00:01:17.350000   \n",
              "27 0 days 01:21:29.379000    VER            1 0 days 00:01:21.670000   \n",
              "28 0 days 01:22:46.591000    VER            1 0 days 00:01:17.212000   \n",
              "29 0 days 01:24:04.100000    VER            1 0 days 00:01:17.509000   \n",
              "30 0 days 01:25:27.529000    VER            1 0 days 00:01:23.429000   \n",
              "31 0 days 01:26:45.330000    VER            1 0 days 00:01:17.801000   \n",
              "\n",
              "    LapNumber  Stint             PitOutTime PitInTime            Sector1Time  \\\n",
              "16       17.0    4.0 0 days 01:05:20.220000       NaT 0 days 00:00:41.092000   \n",
              "17       18.0    4.0                    NaT       NaT 0 days 00:00:21.699000   \n",
              "18       19.0    4.0                    NaT       NaT 0 days 00:00:21.589000   \n",
              "19       20.0    4.0                    NaT       NaT 0 days 00:00:21.692000   \n",
              "20       21.0    4.0                    NaT       NaT 0 days 00:00:21.797000   \n",
              "21       22.0    4.0                    NaT       NaT 0 days 00:00:21.543000   \n",
              "22       23.0    4.0                    NaT       NaT 0 days 00:00:21.623000   \n",
              "23       24.0    4.0                    NaT       NaT 0 days 00:00:21.540000   \n",
              "24       25.0    4.0                    NaT       NaT 0 days 00:00:21.551000   \n",
              "25       26.0    4.0                    NaT       NaT 0 days 00:00:21.488000   \n",
              "26       27.0    4.0                    NaT       NaT 0 days 00:00:21.598000   \n",
              "27       28.0    4.0                    NaT       NaT 0 days 00:00:21.562000   \n",
              "28       29.0    4.0                    NaT       NaT 0 days 00:00:21.613000   \n",
              "29       30.0    4.0                    NaT       NaT 0 days 00:00:21.505000   \n",
              "30       31.0    4.0                    NaT       NaT 0 days 00:00:21.667000   \n",
              "31       32.0    4.0                    NaT       NaT 0 days 00:00:21.682000   \n",
              "\n",
              "              Sector2Time  ... FreshTyre             Team  \\\n",
              "16 0 days 00:00:26.627000  ...      True  Red Bull Racing   \n",
              "17 0 days 00:00:24.902000  ...      True  Red Bull Racing   \n",
              "18 0 days 00:00:24.937000  ...      True  Red Bull Racing   \n",
              "19 0 days 00:00:24.835000  ...      True  Red Bull Racing   \n",
              "20 0 days 00:00:25.712000  ...      True  Red Bull Racing   \n",
              "21 0 days 00:00:24.781000  ...      True  Red Bull Racing   \n",
              "22 0 days 00:00:24.754000  ...      True  Red Bull Racing   \n",
              "23 0 days 00:00:24.692000  ...      True  Red Bull Racing   \n",
              "24 0 days 00:00:24.708000  ...      True  Red Bull Racing   \n",
              "25 0 days 00:00:25.103000  ...      True  Red Bull Racing   \n",
              "26 0 days 00:00:24.703000  ...      True  Red Bull Racing   \n",
              "27 0 days 00:00:24.787000  ...      True  Red Bull Racing   \n",
              "28 0 days 00:00:24.636000  ...      True  Red Bull Racing   \n",
              "29 0 days 00:00:24.792000  ...      True  Red Bull Racing   \n",
              "30 0 days 00:00:24.948000  ...      True  Red Bull Racing   \n",
              "31 0 days 00:00:24.948000  ...      True  Red Bull Racing   \n",
              "\n",
              "             LapStartTime            LapStartDate  TrackStatus  Position  \\\n",
              "16 0 days 01:05:20.220000 2023-06-16 21:20:20.226            1       NaN   \n",
              "17 0 days 01:07:00.793000 2023-06-16 21:22:00.799            1       NaN   \n",
              "18 0 days 01:08:24.957000 2023-06-16 21:23:24.963            1       NaN   \n",
              "19 0 days 01:09:42.889000 2023-06-16 21:24:42.895            1       NaN   \n",
              "20 0 days 01:11:00.610000 2023-06-16 21:26:00.616            1       NaN   \n",
              "21 0 days 01:12:22.687000 2023-06-16 21:27:22.693            1       NaN   \n",
              "22 0 days 01:13:40.247000 2023-06-16 21:28:40.253            1       NaN   \n",
              "23 0 days 01:14:57.790000 2023-06-16 21:29:57.796            1       NaN   \n",
              "24 0 days 01:16:15.089000 2023-06-16 21:31:15.095            1       NaN   \n",
              "25 0 days 01:17:32.518000 2023-06-16 21:32:32.524            1       NaN   \n",
              "26 0 days 01:18:50.359000 2023-06-16 21:33:50.365            1       NaN   \n",
              "27 0 days 01:20:07.709000 2023-06-16 21:35:07.715            1       NaN   \n",
              "28 0 days 01:21:29.379000 2023-06-16 21:36:29.385            2       NaN   \n",
              "29 0 days 01:22:46.591000 2023-06-16 21:37:46.597            1       NaN   \n",
              "30 0 days 01:24:04.100000 2023-06-16 21:39:04.106            1       NaN   \n",
              "31 0 days 01:25:27.529000 2023-06-16 21:40:27.535            1       NaN   \n",
              "\n",
              "    Deleted  DeletedReason FastF1Generated IsAccurate  \n",
              "16    False                          False      False  \n",
              "17    False                          False       True  \n",
              "18    False                          False       True  \n",
              "19    False                          False       True  \n",
              "20    False                          False       True  \n",
              "21    False                          False       True  \n",
              "22    False                          False       True  \n",
              "23    False                          False       True  \n",
              "24    False                          False       True  \n",
              "25    False                          False       True  \n",
              "26    False                          False       True  \n",
              "27    False                          False       True  \n",
              "28    False                          False       True  \n",
              "29    False                          False       True  \n",
              "30    False                          False       True  \n",
              "31    False                          False       True  \n",
              "\n",
              "[16 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1c32838a-38ad-49f8-b0e5-feb9e204c419\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Time</th>\n",
              "      <th>Driver</th>\n",
              "      <th>DriverNumber</th>\n",
              "      <th>LapTime</th>\n",
              "      <th>LapNumber</th>\n",
              "      <th>Stint</th>\n",
              "      <th>PitOutTime</th>\n",
              "      <th>PitInTime</th>\n",
              "      <th>Sector1Time</th>\n",
              "      <th>Sector2Time</th>\n",
              "      <th>...</th>\n",
              "      <th>FreshTyre</th>\n",
              "      <th>Team</th>\n",
              "      <th>LapStartTime</th>\n",
              "      <th>LapStartDate</th>\n",
              "      <th>TrackStatus</th>\n",
              "      <th>Position</th>\n",
              "      <th>Deleted</th>\n",
              "      <th>DeletedReason</th>\n",
              "      <th>FastF1Generated</th>\n",
              "      <th>IsAccurate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0 days 01:07:00.793000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:43.090000</td>\n",
              "      <td>17.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0 days 01:05:20.220000</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:41.092000</td>\n",
              "      <td>0 days 00:00:26.627000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:05:20.220000</td>\n",
              "      <td>2023-06-16 21:20:20.226</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0 days 01:08:24.957000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:24.164000</td>\n",
              "      <td>18.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.699000</td>\n",
              "      <td>0 days 00:00:24.902000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:07:00.793000</td>\n",
              "      <td>2023-06-16 21:22:00.799</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0 days 01:09:42.889000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.932000</td>\n",
              "      <td>19.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.589000</td>\n",
              "      <td>0 days 00:00:24.937000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:08:24.957000</td>\n",
              "      <td>2023-06-16 21:23:24.963</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0 days 01:11:00.610000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.721000</td>\n",
              "      <td>20.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.692000</td>\n",
              "      <td>0 days 00:00:24.835000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:09:42.889000</td>\n",
              "      <td>2023-06-16 21:24:42.895</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0 days 01:12:22.687000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:22.077000</td>\n",
              "      <td>21.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.797000</td>\n",
              "      <td>0 days 00:00:25.712000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:11:00.610000</td>\n",
              "      <td>2023-06-16 21:26:00.616</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0 days 01:13:40.247000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.560000</td>\n",
              "      <td>22.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.543000</td>\n",
              "      <td>0 days 00:00:24.781000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:12:22.687000</td>\n",
              "      <td>2023-06-16 21:27:22.693</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>0 days 01:14:57.790000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.543000</td>\n",
              "      <td>23.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.623000</td>\n",
              "      <td>0 days 00:00:24.754000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:13:40.247000</td>\n",
              "      <td>2023-06-16 21:28:40.253</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>0 days 01:16:15.089000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.299000</td>\n",
              "      <td>24.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.540000</td>\n",
              "      <td>0 days 00:00:24.692000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:14:57.790000</td>\n",
              "      <td>2023-06-16 21:29:57.796</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>0 days 01:17:32.518000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.429000</td>\n",
              "      <td>25.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.551000</td>\n",
              "      <td>0 days 00:00:24.708000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:16:15.089000</td>\n",
              "      <td>2023-06-16 21:31:15.095</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>0 days 01:18:50.359000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.841000</td>\n",
              "      <td>26.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.488000</td>\n",
              "      <td>0 days 00:00:25.103000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:17:32.518000</td>\n",
              "      <td>2023-06-16 21:32:32.524</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>0 days 01:20:07.709000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.350000</td>\n",
              "      <td>27.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.598000</td>\n",
              "      <td>0 days 00:00:24.703000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:18:50.359000</td>\n",
              "      <td>2023-06-16 21:33:50.365</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>0 days 01:21:29.379000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:21.670000</td>\n",
              "      <td>28.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.562000</td>\n",
              "      <td>0 days 00:00:24.787000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:20:07.709000</td>\n",
              "      <td>2023-06-16 21:35:07.715</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>0 days 01:22:46.591000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.212000</td>\n",
              "      <td>29.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.613000</td>\n",
              "      <td>0 days 00:00:24.636000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:21:29.379000</td>\n",
              "      <td>2023-06-16 21:36:29.385</td>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>0 days 01:24:04.100000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.509000</td>\n",
              "      <td>30.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.505000</td>\n",
              "      <td>0 days 00:00:24.792000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:22:46.591000</td>\n",
              "      <td>2023-06-16 21:37:46.597</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>0 days 01:25:27.529000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:23.429000</td>\n",
              "      <td>31.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.667000</td>\n",
              "      <td>0 days 00:00:24.948000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:24:04.100000</td>\n",
              "      <td>2023-06-16 21:39:04.106</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>0 days 01:26:45.330000</td>\n",
              "      <td>VER</td>\n",
              "      <td>1</td>\n",
              "      <td>0 days 00:01:17.801000</td>\n",
              "      <td>32.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaT</td>\n",
              "      <td>NaT</td>\n",
              "      <td>0 days 00:00:21.682000</td>\n",
              "      <td>0 days 00:00:24.948000</td>\n",
              "      <td>...</td>\n",
              "      <td>True</td>\n",
              "      <td>Red Bull Racing</td>\n",
              "      <td>0 days 01:25:27.529000</td>\n",
              "      <td>2023-06-16 21:40:27.535</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>16 rows × 31 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c32838a-38ad-49f8-b0e5-feb9e204c419')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1c32838a-38ad-49f8-b0e5-feb9e204c419 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1c32838a-38ad-49f8-b0e5-feb9e204c419');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_VER_times = pd.DataFrame()\n",
        "df_VER_times[\"LapTime\"] = df_VER_medium[\"LapTime\"].dt.total_seconds()\n",
        "df_VER_times[\"TyreLife\"] = df_VER_medium[\"TyreLife\"]\n",
        "\n",
        "df_VER_times"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "bq7kMn5mErUZ",
        "outputId": "a4eb272d-4f48-4507-ed3f-b12d1c1a43c5"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    LapTime  TyreLife\n",
              "16  103.090       1.0\n",
              "17   84.164       2.0\n",
              "18   77.932       3.0\n",
              "19   77.721       4.0\n",
              "20   82.077       5.0\n",
              "21   77.560       6.0\n",
              "22   77.543       7.0\n",
              "23   77.299       8.0\n",
              "24   77.429       9.0\n",
              "25   77.841      10.0\n",
              "26   77.350      11.0\n",
              "27   81.670      12.0\n",
              "28   77.212      13.0\n",
              "29   77.509      14.0\n",
              "30   83.429      15.0\n",
              "31   77.801      16.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cd2d8200-35f2-4c95-8ae0-600ace6f0160\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LapTime</th>\n",
              "      <th>TyreLife</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>103.090</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>84.164</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>77.932</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>77.721</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>82.077</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>77.560</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>77.543</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>77.299</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>77.429</td>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>77.841</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>77.350</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>81.670</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>77.212</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>77.509</td>\n",
              "      <td>14.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>83.429</td>\n",
              "      <td>15.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>77.801</td>\n",
              "      <td>16.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd2d8200-35f2-4c95-8ae0-600ace6f0160')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cd2d8200-35f2-4c95-8ae0-600ace6f0160 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cd2d8200-35f2-4c95-8ae0-600ace6f0160');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_ALO_times = pd.DataFrame()\n",
        "df_ALO_times[\"LapTime\"] = df_ALO_medium[\"LapTime\"].dt.total_seconds()\n",
        "df_ALO_times[\"TyreLife\"] = df_ALO_medium[\"TyreLife\"]\n",
        "\n",
        "df_ALO_times"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "Bjs2pjEMFlZc",
        "outputId": "9cdc6a87-5602-4716-95d9-ba046a013abe"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     LapTime  TyreLife\n",
              "130   99.421       1.0\n",
              "131   77.164       2.0\n",
              "132   77.968       3.0\n",
              "133   79.223       4.0\n",
              "134   77.503       5.0\n",
              "135   77.696       6.0\n",
              "136   77.122       7.0\n",
              "137   80.460       8.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1353d415-c5ca-46f3-9909-749665bc8a79\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LapTime</th>\n",
              "      <th>TyreLife</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>99.421</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>77.164</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>77.968</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>79.223</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>77.503</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>77.696</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>77.122</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>80.460</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1353d415-c5ca-46f3-9909-749665bc8a79')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1353d415-c5ca-46f3-9909-749665bc8a79 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1353d415-c5ca-46f3-9909-749665bc8a79');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Merge the filtered data frames on TyreLife column, using 'left' join to include all rows from df1\n",
        "\n",
        "\n",
        "merged_df = pd.merge(df_VER_times, df_ALO_times, on='TyreLife', suffixes=('_VER', '_ALO'), how='left')\n",
        "# Calculate delta of LapTime (VER - ALO)\n",
        "merged_df['Delta'] = merged_df['LapTime_VER'] - merged_df['LapTime_ALO']\n",
        "\n",
        "merged_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "pGciF3UhDzS3",
        "outputId": "dc565690-8aad-454a-d1c8-7299b7b1fd19"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    LapTime_VER  TyreLife  LapTime_ALO  Delta\n",
              "0       103.090       1.0       99.421  3.669\n",
              "1        84.164       2.0       77.164  7.000\n",
              "2        77.932       3.0       77.968 -0.036\n",
              "3        77.721       4.0       79.223 -1.502\n",
              "4        82.077       5.0       77.503  4.574\n",
              "5        77.560       6.0       77.696 -0.136\n",
              "6        77.543       7.0       77.122  0.421\n",
              "7        77.299       8.0       80.460 -3.161\n",
              "8        77.429       9.0          NaN    NaN\n",
              "9        77.841      10.0          NaN    NaN\n",
              "10       77.350      11.0          NaN    NaN\n",
              "11       81.670      12.0          NaN    NaN\n",
              "12       77.212      13.0          NaN    NaN\n",
              "13       77.509      14.0          NaN    NaN\n",
              "14       83.429      15.0          NaN    NaN\n",
              "15       77.801      16.0          NaN    NaN"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2ea93e75-1aba-42e0-8679-78b0c0818bba\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>LapTime_VER</th>\n",
              "      <th>TyreLife</th>\n",
              "      <th>LapTime_ALO</th>\n",
              "      <th>Delta</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>103.090</td>\n",
              "      <td>1.0</td>\n",
              "      <td>99.421</td>\n",
              "      <td>3.669</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>84.164</td>\n",
              "      <td>2.0</td>\n",
              "      <td>77.164</td>\n",
              "      <td>7.000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>77.932</td>\n",
              "      <td>3.0</td>\n",
              "      <td>77.968</td>\n",
              "      <td>-0.036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>77.721</td>\n",
              "      <td>4.0</td>\n",
              "      <td>79.223</td>\n",
              "      <td>-1.502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>82.077</td>\n",
              "      <td>5.0</td>\n",
              "      <td>77.503</td>\n",
              "      <td>4.574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>77.560</td>\n",
              "      <td>6.0</td>\n",
              "      <td>77.696</td>\n",
              "      <td>-0.136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>77.543</td>\n",
              "      <td>7.0</td>\n",
              "      <td>77.122</td>\n",
              "      <td>0.421</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>77.299</td>\n",
              "      <td>8.0</td>\n",
              "      <td>80.460</td>\n",
              "      <td>-3.161</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>77.429</td>\n",
              "      <td>9.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>77.841</td>\n",
              "      <td>10.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>77.350</td>\n",
              "      <td>11.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>81.670</td>\n",
              "      <td>12.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>77.212</td>\n",
              "      <td>13.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>77.509</td>\n",
              "      <td>14.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>83.429</td>\n",
              "      <td>15.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>77.801</td>\n",
              "      <td>16.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ea93e75-1aba-42e0-8679-78b0c0818bba')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2ea93e75-1aba-42e0-8679-78b0c0818bba button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2ea93e75-1aba-42e0-8679-78b0c0818bba');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# New section"
      ],
      "metadata": {
        "id": "pMvbOtATnl1K"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a scatter plot of LapTime from both data frames\n",
        "import matplotlib.pyplot as plt\n",
        "# Plotting\n",
        "plt.plot(merged_df['TyreLife'], merged_df['LapTime_VER'], label='VER')\n",
        "plt.plot(merged_df['TyreLife'], merged_df['LapTime_ALO'], label='ALO')\n",
        "\n",
        "plt.xlabel('TyreLife')\n",
        "plt.ylabel('LapTime')\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n",
        "#With this approach, the resulting merged data frame will have NaN values for the LapTime column in df2 where the TyreLife values do not match. By using plt.scatter, the missing values will not be plotted, resulting in the desired visualization where the lap times from df1 are shown for all 15 rows of TyreLife, and the lap times from df2 are shown for the matching TyreLife values.\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "o9WX0QCAEZA6",
        "outputId": "190af5b8-c2b2-4838-ae0f-100263bdcd41"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plotting\n",
        "plt.plot(merged_df['TyreLife'], merged_df['Delta'])\n",
        "\n",
        "plt.xlabel('TyreLife')\n",
        "plt.ylabel('Delta LapTime (VER - ALO)')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "M_uYliv6EZi-",
        "outputId": "493752cd-a7a8-466b-975e-365b6ec9d7b3"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "G8IRNXAoIcFL"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}